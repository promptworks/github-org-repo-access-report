doctype html
html
  head
    meta http-equiv='Content-Type' content='text/html; charset=utf-8'
    link href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css' type='text/css' rel='stylesheet'
  body: .container

    section
      .title Organization
      .fact
        .statement
          | Default permission for members is:
          code = @org.default_repository_permission
        .help Options: https://developer.github.com/v3/orgs/#edit-an-organization

    section
      .title Organization members

      - @org_memberships.each do |membership|
        - user = @users_by_login.fetch(membership.user.login)

        section
          .title #{user.name} <code>#{user.login}</code>
          .fact id="#{user.login}-belongs-to-org": .statement belongs in this organization
          .fact depends-on='previous': .statement has the role <code>#{membership.role}</code>

          section depends-on="#{user.login}-belongs-to-org"
            .title belongs to these teams:
            - teams_for_user_in_org(user).each do |team|
              .fact: .statement belongs to team <em>#{team.name}</em>

    section
      .title Private Repositories

      - @repos.take(10).each do |repo|
        section
          .title = repo.name
          .description
            p = repo.description
            p = repo.html_url

          section
            .title Teams that have access to <code>#{repo.name}</code>
            .description = url_repo_collaboration(repo)

            - repo_teams = @teams_per_repo[repo.full_name].sort_by{|team| order_for_permission(team.permission) }
            - if repo_teams.any?
              - repo_teams.each do |team|
                section
                  .title = team.name
                  .description = url_org_team(team)

                  .fact: .statement <code>#{team.name}</code> has access
                  .fact depends-on='previous': .statement Permission level <code>#{team.permission}</code>
            - else
              .fact: .statement No teams have access to <code>#{repo.name}</code>

          section
            .title Collaborators
            .description
              p = url_repo_collaboration(repo)
            - collaborators = @collaborations.fetch(repo.full_name).sort_by{|c| -c.permissions.select(&:last).size }
            - if collaborators.any?
              - collaborators.each do |collaborator|
                - user = @users_by_login.fetch(collaborator.login)
                section
                  .title #{user.name} <code>#{user.login}</code>
                  .description
                    p = user.html_url
                    p
                      | via teams:
                      - teams_for_user_on_repo(user, repo).each do |team|
                        code =<> team.name

                  .fact: .statement has access to this repo
                  .fact depends-on='previous': .statement
                    | has only these permissions:
                    - collaborator.permissions.select(&:last).map(&:first).each do |permission_name|
                      code =<> permission_name
            - else
              .fact: .statement has no collaborators other than users who have access to all repos due to being an organization admin or the organization having default permissions other than <code>none</code>


sass:
  .repo
    margin-top: 75px

    &:first-child
      margin-top: 50px

  .statement:before
    content: '✅ '

  .help
    padding-left: 25px
    &:before
      content: '❔ '

  .title
    font-weight: bold

  section
    margin:
      top: 20px
      left: 20px

  section .title
    font-size: 225%
  section section .title
    font-size: 175%
  section section section .title
    font-size: 150%
  section section section section .title
    font-size: 125%
