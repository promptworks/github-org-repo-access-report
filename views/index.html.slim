doctype html
html
  head
    meta http-equiv='Content-Type' content='text/html; charset=utf-8'
    link href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css' type='text/css' rel='stylesheet'
  body

    .brand
      h1
        img.logo src=@org.avatar_url
        span.org = @org.name
        small<>: a href=@org.html_url target="_blank" on Github
    hr

    .container

      .page-header
        h2#members
          | Organization Members
          .badge<>= @org_members.size
          small<>: a href=url_org_people target='_blank'
            | See on Github

      p
        strong<> Expected admins:
        = @admin_logins.to_a.join(', ')

      p: strong
        | Default permission for members:
        strong<>: code = @org.default_repository_permission

      ul.members
        - @org_members.each do |org_member|
          - user = @users_by_login[org_member.login]
          li.member.media
            .media-left
              img.user-avatar src=user.avatar_url
            .media-body
              h4.media-heading #{user.name} (<a href=#{user.html_url} target=_blank>#{user.login}</a>)
              .repo-teams
                strong Teams
                - teams_for_user_in_org(user).each do |team|
                  .repo-team.label.label-default<>= team.name
              .issue-actions
                == issue_button(issue_remove_member(user))


      .page-header
        h2#repos
          | Private Repositories
          .badge<>= @repos.size

      .repos
        - @repos.each do |repo|
          - collaborators = @collaborations[repo.full_name].sort_by{|c| c.permissions.select(&:last).size }.reverse
          - repo_teams = @teams_per_repo[repo.full_name].sort_by{|team| order_for_permission(team.permission) }
          .repo

            .page-header
              h3
                code<>: a href=repo.html_url target='_blank' = repo.name
                =<> repo.description

                == issue_button issue_archive_repo(repo)
                == issue_button issue_delegate_audit(repo, repo_teams, collaborators)

            h4
              | Teams
              small<>: a(href=url_repo_collaboration(repo) target="_blank") on Github
            - if repo_teams.any?
              ul.teams
                - repo_teams.each do |team|
                  li.team
                    h4
                      .permission.label class=label_for_permission(team.permission) =<> team.permission
                      =<> team.name
                      code: a href=url_org_team(team) target="_blank" =<> team.slug
            - else
              em None


            h4
              | Collaborators
              small<>: a(href=url_repo_collaboration(repo) target="_blank") on Github
            - if collaborators.any?
              ul.collaborators
                - collaborators.each do |collaborator|
                  - user = @users_by_login[collaborator.login]
                  li.collaborator.media
                    .media-left
                      img.user-avatar src=user.avatar_url
                    .media-body
                      h4.media-heading #{user.name} (<a href=#{user.html_url} target=_blank>#{user.login}</a>)
                      .permissions
                        strong Permissions
                        - collaborator.permissions.each do |permission_name, has_permission|
                          - if has_permission
                            .permission.label class=label_for_permission(permission_name) =<> permission_name
                      .repo-teams
                        strong Teams
                        - teams_for_user_on_repo(user, repo).each do |team|
                          .repo-team.label.label-default<>= team.name
            - else
              em None


    css:
      .repo {
        margin-top: 75px;
      }

      .repo:first-child {
        margin-top: 50px;
      }

      button.issue {
        opacity: 0.5;
      }

      button.issue:hover {
        opacity: 1;
      }


      .member button.issue {
        margin-left: 10px;
        margin-top: 10px;
      }

      .page-header button.issue {
        margin-left: 10px;
      }

      img.logo {
        height: 45px;
        margin-right: 13px;
        margin-left: 20px;
        margin-top: -9px;
      }

      .user-avatar {
        height: 64px;
        width: 64px;
      }

    script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha256-k2WSCIexGzOj3Euiig+TlR8gA0EmPjuc79OEeY5L45g=" crossorigin="anonymous" type='text/javascript'
    script src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js' type='text/javascript'

    javascript:
      $(() => {
        $('[data-toggle="popover"]').popover({html: true})

        const copy = (event) => {
          const copyTargetSelector = $(event.target).data('copy-target')
          const copyTargetEl = $(copyTargetSelector).get(0)

          const range = document.createRange()
          range.selectNode(copyTargetEl)
          window.getSelection().addRange(range)

          const successful = document.execCommand('copy')
          const msg = successful ? '✅' : '🚫'
          console.log('Copy email command was ' + msg)

          event.target.innerText = event.target.innerText.replace('⬜️', msg)

          window.getSelection().removeAllRanges()
        }

        $('[data-copy-target]').on('click', (event) => {
          copy(event)
          setTimeout(() => copy(event), 1)
        })
      })
